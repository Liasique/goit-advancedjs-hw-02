{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst fp = flatpickr(\"#datetime-picker\", {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({ message: 'Please choose a date in the future' });\n      document.querySelector('[data-start]').disabled = true;\n    } else {\n      document.querySelector('[data-start]').disabled = false;\n    }\n  }\n});\n\ndocument.querySelector('[data-start]').addEventListener('click', () => {\n  const endTime = fp.selectedDates[0];\n  startCountdown(endTime);\n});\n\nfunction startCountdown(endTime) {\n  function update() {\n    const currentTime = new Date();\n    const timeLeft = endTime - currentTime;\n\n    if (timeLeft <= 0) {\n      clearInterval(intervalId);\n      iziToast.info({ title: 'Info', message: 'The countdown has finished!' });\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeLeft);\n    document.querySelector('[data-days]').textContent = addLeadingZero(days);\n    document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n    document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n    document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n  }\n\n  update();\n  const intervalId = setInterval(update, 1000);\n}\n"],"names":["addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","fp","flatpickr","selectedDates","iziToast","endTime","startCountdown","update","currentTime","timeLeft","intervalId"],"mappings":"0IAKA,SAASA,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAKC,EAAU,mBAAoB,CACvC,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACAA,EAAc,IACf,IAAI,MACtBC,EAAS,MAAM,CAAE,QAAS,oCAAsC,CAAA,EAChE,SAAS,cAAc,cAAc,EAAE,SAAW,IAElD,SAAS,cAAc,cAAc,EAAE,SAAW,EAErD,CACH,CAAC,EAED,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,IAAM,CACrE,MAAMC,EAAUJ,EAAG,cAAc,GACjCK,EAAeD,CAAO,CACxB,CAAC,EAED,SAASC,EAAeD,EAAS,CAC/B,SAASE,GAAS,CAChB,MAAMC,EAAc,IAAI,KAClBC,EAAWJ,EAAUG,EAE3B,GAAIC,GAAY,EAAG,CACjB,cAAcC,CAAU,EACxBN,EAAS,KAAK,CAAE,MAAO,OAAQ,QAAS,6BAA6B,CAAE,EACvE,MACD,CAED,KAAM,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUc,CAAQ,EAC5D,SAAS,cAAc,aAAa,EAAE,YAAchB,EAAeI,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcJ,EAAeK,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcL,EAAeM,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcN,EAAeO,CAAO,CAC9E,CAEDO,IACA,MAAMG,EAAa,YAAYH,EAAQ,GAAI,CAC7C"}